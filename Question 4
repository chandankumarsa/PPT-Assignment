import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Scanner;

public class DistinctArrays {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter the number of elements in nums1: ");
        int length1 = scanner.nextInt();
        int[] nums1 = new int[length1];
        
        System.out.println("Enter the elements of nums1:");
        for (int i = 0; i < length1; i++) {
            nums1[i] = scanner.nextInt();
        }
        
        System.out.print("Enter the number of elements in nums2: ");
        int length2 = scanner.nextInt();
        int[] nums2 = new int[length2];
        
        System.out.println("Enter the elements of nums2:");
        for (int i = 0; i < length2; i++) {
            nums2[i] = scanner.nextInt();
        }
        
        List<List<Integer>> answer = findDistinctArrays(nums1, nums2);
        
        System.out.println("Distinct integers in nums1 not present in nums2: " + answer.get(0));
        System.out.println("Distinct integers in nums2 not present in nums1: " + answer.get(1));
    }
    
    public static List<List<Integer>> findDistinctArrays(int[] nums1, int[] nums2) {
        List<List<Integer>> answer = new ArrayList<>();
        HashSet<Integer> set1 = new HashSet<>();
        HashSet<Integer> set2 = new HashSet<>();
        
        for (int num : nums1) {
            set1.add(num);
        }
        
        for (int num : nums2) {
            set2.add(num);
        }
        
        List<Integer> distinctNums1 = new ArrayList<>();
        List<Integer> distinctNums2 = new ArrayList<>();
        
        for (int num : nums1) {
            if (!set2.contains(num)) {
                distinctNums1.add(num);
            }
        }
        
        for (int num : nums2) {
            if (!set1.contains(num)) {
                distinctNums2.add(num);
            }
        }
        
        answer.add(distinctNums1);
        answer.add(distinctNums2);
        
        return answer;
    }
}
